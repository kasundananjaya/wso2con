<%

    include("../dbmodel/sessionQuery.jag");

    function getAgenda(){
        var result=getFullAgenda();
        var stringResult=stringify(result);
        var jsonAgenda={};
        var sessionArray=[];
        if(stringResult!="[]"){
            for(i=0;i<result.length;i++){
                var session={};
                session.id=result[i].ID;
                if(result[i].TYPE==1){
                    session.type="keynote";
                }else if(result[i].TYPE==2){
                    session.type="session";
                }else if(result[i].TYPE==3){
                    session.type="break";
                }else if(result[i].TYPE==4){
                    session.type="event";
                }
                session.title=result[i].TITLE;
                session.sessionabstract=result[i].ABSTRACT;
                session.start=result[i].START;
                session.end=result[i].END;
                session.location=result[i].LOCATION;
                var sessionIdString=stringify(result[i].ID);
                var speakerResult=getSpeakerQuery(sessionIdString);
                var stringSpeaker=stringify(speakerResult);
                var speakerArray=[];
                if(stringSpeaker!="[]"){
                    for(j=0;j<speakerResult.length;j++){
                        var speaker=speakerResult[j].SPEAKER;
                        speakerArray.push(speaker);
                    }
                }
                session.speaker=speakerArray;
                sessionArray.push(session);
            }
        }
        var resultString=stringify(sessionArray);
        print(parse('{"sessions":'+resultString+'}'));
    }

    function getSession(id){
        var result=getSessionQuery(id);
        var stringResult=stringify(result);
        if(stringResult!="[]" && result!=null){
            var session={};
            session.id=result[0].ID;
            if(result[0].TYPE==1){
                session.type="keynote";
            }else if(result[0].TYPE==2){
                session.type="session";
            }else if(result[0].TYPE==3){
                session.type="break";
            }else if(result[0].TYPE==4){
                session.type="event";
            }
            session.title=result[0].TITLE;
            session.sessionabstract=result[0].ABSTRACT;
            session.start=result[0].START;
            session.end=result[0].END;
            session.location=result[0].LOCATION;
            var sessionIdString=stringify(result[0].ID);
            var speakerResult= getSpeakerQuery(sessionIdString);
            var stringSpeaker=stringify(speakerResult);
            var speakerArray=[];
            if(stringSpeaker!="[]"){
                for(i=0;i<speakerResult.length;i++){
                    var speaker=speakerResult[i].SPEAKER;
                     speakerArray.push(speaker);
                }
            }
            session.speaker=speakerArray;
            print(session);
        }else{
            var errorString='{"error":"session_not_found"}';
            print(parse(errorString));
        }
    }

    function addSession(type,title,speaker,session_abstract,start_time,end_time,location_id,feedback){
          if(type=="keynote"){
              type=1;
          }else if(type=="session"){
              type=2;
          }else if(type=="break"){
              type=3;
          }else if(type=="event"){
              type=4;
          }else if(type=="available"){
              type=5;
          }
          addSessionQuery(type,title,session_abstract,start_time,end_time,location_id,feedback);
          var sessionResult=getLastSessionEntry();
          var stringSession=stringify(sessionResult);
          if(stringSession!="[]" && speaker!=null){
                var speakers=parse(speaker);
                var stringId=sessionResult[0].ID;
                for(i=0;i<speakers.length;i++){
                    var speaker_id=speakers[i];
                    addSpeakerQuery(stringId, speaker_id);
                }

          }
      }

      function updateSession(session_id,type,title,speaker,session_abstract,start_time,end_time,location_id,feedback){
          if(type=="keynote"){
              type=1;
          }else if(type=="session"){
              type=2;
          }else if(type=="break"){
              type=3;
          }else if(type=="event"){
              type=4;
          }else if(type=="available"){
              type=5;
          }
          updateSessionQuery(session_id,type,title,session_abstract,start_time,end_time,location_id,feedback);
          deleteAllSpeakersQuery(session_id);
          if(speaker!=null){
              var speakers=parse(speaker);
              for(i=0;i<speakers.length;i++){
                  var speaker_id=speakers[i];
                  addSpeakerQuery(session_id, speaker_id);
              }
          }
      }

      function deleteSession(session_id){
            deleteAllSpeakersQuery(session_id);
            deleteSessionQuery(session_id);
      }
%>