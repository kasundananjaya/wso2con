<%

   include("../dbmodel/meetingQuery.jag");
   include("../dbmodel/availabilityQuery.jag");
   include("../dbmodel/attendeeQuery.jag");
   include("../dbmodel/sessionQuery.jag");

   function getMeetings(user){
        var meetings=getMeetingsQuery(user);
        var stringMeeting=stringify(meetings);
        if(stringMeeting!="[]"){
            for(i=0;i<meetings.length;i++){
                if(meetings[i].STATUS==1){
                    meetings[i].STATUS="pending";
                }else if(meetings[i].STATUS==2){
                    meetings[i].STATUS="accepted";
                }else if(meetings[i].STATUS==3){
                    meetings[i].STATUS="declined";
                }else if(meetings[i].STATUS==4){
                    meetings[i].STATUS="cancelled";
                }

                if(meetings[i].SENDNOTES==0){
                    meetings[i].SENDNOTES="no";
                }else if(meetings[i].SENDNOTES==1){
                    meetings[i].SENDNOTES="yes";
                }else if(meetings[i].SENDNOTES==2){
                    meetings[i].SENDNOTES="sent";
                }
            }
            var meetingsString=stringify(meetings);
            var result=parse('{"meetings":'+meetingsString.toLowerCase()+'}');
            print(result);
        }else{
            var userId=getProfileQuery(user);
            var stringUser=stringify(userId);
            if(stringUser=="[]"){
                response.sendError(404);
            }else{
                var meetingsString=stringify(meetings);
                var result=parse('{"meetings":'+meetingsString+'}');
                print(result);
            }
        }
   }

   function getMeeting(meeting_id){
       var meeting=getMeetingQuery(meeting_id);
       var stringMeeting=stringify(meeting);
       if(stringMeeting!="[]"){
           if(meeting[0].STATUS==1){
               meeting[0].STATUS="pending";
           }else if(meeting[0].STATUS==2){
               meeting[0].STATUS="accepted";
           }else if(meeting[0].STATUS==3){
               meeting[0].STATUS="declined";
           }else if(meeting[0].STATUS==4){
               meeting[0].STATUS="cancelled";
           }

           if(meeting[0].SENDNOTES==0){
               meeting[0].SENDNOTES="no";
           }else if(meeting[0].SENDNOTES==1){
               meeting[0].SENDNOTES="yes";
           }else if(meeting[0].SENDNOTES==2){
               meeting[0].SENDNOTES="sent";
           }
           var meetingString=stringify(meeting);
           var result=parse('{"meeting":'+meetingString.toLowerCase()+'}');
           print(result);
       }else{
           response.sendError(404);
       }
   }

   function requestMeeting(user,requestee,session,msg){
       var meetings=getRequestedMeetingQuery(user,requestee,session);
       var stringMeeting=stringify(meetings);
       var otherMeetings=getMeetingsOnSessionQuery(requestee,session);
       var stringOther=stringify(otherMeetings);
       if(stringMeeting!="[]" && meetings!=null){
            var meeting_id=stringify(meetings[0].ID);
            updateRequestMessageQuery(meeting_id,msg);
            meetings=getRequestedMeetingQuery(user,requestee,session);
            meeting_id=meetings[0].ID;
            addNotificationQuery(requestee, meeting_id);
            commitQuery();
            print(parse('{"id":'+meeting_id+'}'));
       }else if(stringOther!="[]" && otherMeetings!=null){
            var accepted=false;
            for(i=0;i<otherMeetings.length;i++){
                if(otherMeetings[i].STATUS==2){
                    accepted=true;
                }
            }
            if(accepted){
                var error='{"error":"slot_unavailable"}';
                print(parse(error));
            }else{
                var userId=getProfileQuery(user);
                var stringUser=stringify(userId);
                var requesteeId=getProfileQuery(requestee);
                var stringRequestee=stringify(requesteeId);
                var sessionId=getSessionQuery(session);
                var stringSession=stringify(sessionId);
                if(stringUser!="[]" && stringRequestee!="[]" && stringSession!="[]"){
                    addNewMeetingQuery(user,requestee, session, msg);
                    meetings=getRequestedMeetingQuery(user,requestee,session);
                    meeting_id=meetings[0].ID;
                    addNotificationQuery(requestee, meeting_id);
                    commitQuery();
                    print(parse("{id:"+meeting_id+"}"));
                }else{
                    response.sendError(404);
                }
            }
       }else{
            var availability= getSessionAvailabilityQuery(requestee,session);
            var stringAvailability= stringify(availability);
            if(availability==null || stringAvailability=="[]"){
                var error='{"error":"slot_unavailable"}';
                print(parse(error));
            }else{
                var userId=getProfileQuery(user);
                var stringUser=stringify(userId);
                var requesteeId=getProfileQuery(requestee);
                var stringRequestee=stringify(requesteeId);
                var sessionId=getSessionQuery(session);
                var stringSession=stringify(sessionId);
                if(stringUser!="[]" && stringRequestee!="[]" && stringSession!="[]"){
                    addNewMeetingQuery(user,requestee, session, msg);
                    meetings=getRequestedMeetingQuery(user,requestee,session);
                    if(meetings!=null){
                        meeting_id=meetings[0].ID;
                    }
                    addNotificationQuery(requestee, meeting_id);
                    commitQuery();
                    print(parse('{"id":'+meeting_id+'}'));
                }else {
                    response.sendError(404);
                }
            }
       }

   }

   function acceptMeeting(user,meeting_id,status,msg){
        var meeting=getMeetingQuery(meeting_id);
        var stringMeeting=stringify(meeting);
        if(status=="accept"){
            status=2;
        }else if(status=="decline"){
            status=3;
        }else if(status=="cancel"){
            status=4
        }
        if(meeting==null || stringMeeting=="[]"){
            response.sendError(404);
        }else{
            var requestee=meeting[0].REQUESTEE;
            var requester=meeting[0].REQUESTER;
            if(user==requestee){
                updateResponseQuery(meeting_id,msg,status);
                addNotificationQuery(requester, meeting_id);
                commitQuery();
            }else if(user==requester && status==4){
                updateResponseQuery(meeting_id,msg,status);
                addNotificationQuery(requestee, meeting_id);
                commitQuery();
            }else{
                var error='{"error":"user_mismatch"}' ;
                print(parse(error));
            }
        }
   }

   function updateMeeting(user,meeting_id,notes,send_notes){
        var meeting=getMeetingQuery(meeting_id);
        var stringMeeting=stringify(meeting);
        if(meeting==null || stringMeeting=="[]"){
            response.sendError(404);
        }else{
            if(send_notes=="yes"){
                send_notes=1;
            }else if(send_notes="no"){
                send_notes=2;
            }else if(send_notes="sent"){
                send_notes=3;
            }
            updateMeetingQuery(meeting_id,notes,send_notes);
            commitQuery();
        }
   }

   function getNowPlayingMeeting(user,now){
       var npMeetings = getNowPlayingMeetingQuery(user,now);
       var stringMeeting=stringify(npMeetings);
       if(stringMeeting!="[]"){
           for(i=0;i<npMeetings.length;i++){
               if(npMeetings[i].STATUS==1){
                   npMeetings[i].STATUS="pending";
               }else if(npMeetings[i].STATUS==2){
                   npMeetings[i].STATUS="accepted";
               }else if(npMeetings[i].STATUS==3){
                   npMeetings[i].STATUS="declined";
               }else if(npMeetings[i].STATUS==4){
                   npMeetings[i].STATUS="cancelled";
               }

               if(npMeetings[i].SENDNOTES==0){
                   npMeetings[i].SENDNOTES="no";
               }else if(npMeetings[i].SENDNOTES==1){
                   npMeetings[i].SENDNOTES="yes";
               }else if(npMeetings[i].SENDNOTES==2){
                   npMeetings[i].SENDNOTES="sent";
               }
           }
           var meetingsString=stringify(npMeetings);
           var result=parse('{"meetings":'+meetingsString.toLowerCase()+'}');
           print(result);
       }else{
           var userId=getProfileQuery(user);
           var stringUser=stringify(userId);
           if(stringUser=="[]"){
               response.sendError(404);
           }else{
               var meetingsString=stringify(npMeetings);
               var result=parse('{"meetings":'+meetingsString+'}');
               print(result);
           }
       }
   }

   function getUpNextMeeting(user,now){
       var nuMeetings = getUpNextMeetingQuery(user,now);
       var stringMeeting=stringify(nuMeetings);
       if(stringMeeting!="[]"){
           for(i=0;i<nuMeetings.length;i++){
               if(nuMeetings[i].STATUS==1){
                   nuMeetings[i].STATUS="pending";
               }else if(nuMeetings[i].STATUS==2){
                   nuMeetings[i].STATUS="accepted";
               }else if(nuMeetings[i].STATUS==3){
                   nuMeetings[i].STATUS="declined";
               }else if(nuMeetings[i].STATUS==4){
                   nuMeetings[i].STATUS="cancelled";
               }

               if(nuMeetings[i].SENDNOTES==0){
                   nuMeetings[i].SENDNOTES="no";
               }else if(nuMeetings[i].SENDNOTES==1){
                   nuMeetings[i].SENDNOTES="yes";
               }else if(nuMeetings[i].SENDNOTES==2){
                   nuMeetings[i].SENDNOTES="sent";
               }
           }
           var meetingsString=stringify(nuMeetings);
           var result=parse('{"meetings":'+meetingsString.toLowerCase()+'}');
           print(result);
       }else{
           var userId=getProfileQuery(user);
           var stringUser=stringify(userId);
           if(stringUser=="[]"){
               response.sendError(404);
           }else{
               var meetingsString=stringify(nuMeetings);
               var result=parse('{"meetings":'+meetingsString+'}');
               print(result);
           }
       }
   }

   function getPendingMeetings(user){
       var pMeetings= getPendingMeetingsQuery(user);
       var stringMeeting=stringify(pMeetings);
       if(stringMeeting!="[]"){
           for(i=0;i<pMeetings.length;i++){
               if(pMeetings[i].STATUS==1){
                   pMeetings[i].STATUS="pending";
               }else if(pMeetings[i].STATUS==2){
                   pMeetings[i].STATUS="accepted";
               }else if(pMeetings[i].STATUS==3){
                   pMeetings[i].STATUS="declined";
               }else if(pMeetings[i].STATUS==4){
                   pMeetings[i].STATUS="cancelled";
               }

               if(pMeetings[i].SENDNOTES==0){
                   pMeetings[i].SENDNOTES="no";
               }else if(pMeetings[i].SENDNOTES==1){
                   pMeetings[i].SENDNOTES="yes";
               }else if(pMeetings[i].SENDNOTES==2){
                   pMeetings[i].SENDNOTES="sent";
               }
           }
           var meetingsString=stringify(pMeetings);
           var result=parse('{"meetings":'+meetingsString.toLowerCase()+'}');
           print(result);
       }else{
           var userId=getProfileQuery(user);
           var stringUser=stringify(userId);
           if(stringUser=="[]"){
               response.sendError(404);
           }else{
               var meetingsString=stringify(pMeetings);
               var result=parse('{"meetings":'+meetingsString+'}');
               print(result);
           }
       }
   }




%>
